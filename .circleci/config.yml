version: 2.1
# executors:
#   my-executor:
#     docker:
#       - image: circleci/node # deprecated
#       # See https://circleci.com/docs/ja/2.0/next-gen-migration-guide/
orbs:
  # aws-ecr: circleci/aws-ecr@6.10.0 # 「This job was rejected because the image is unavailable」
  aws-ecr: circleci/aws-ecr@8.1.2
  aws-ecs: circleci/aws-ecs@2.3.0
#   aws-cli: circleci/aws-cli@2.1.0
# jobs:
#   tmp:
#     executor: my-executor
#     steps:
#       - checkout
#       - aws-cli/install
#       - run: |
#           aws_sts_credentials=$(aws sts assume-role-with-web-identity \
#             --role-arn ${AWS_ROLE_ARN} \
#             --web-identity-token ${CIRCLE_OIDC_TOKEN} \
#             --role-session-name "circleci-oidc" \
#             --duration-seconds 900 \
#             --query "Credentials" \
#             --output "json")
#           echo export AWS_ACCESS_KEY_ID="$(echo $aws_sts_credentials | jq -r '.AccessKeyId')" >> $BASH_ENV
#           echo export AWS_SECRET_ACCESS_KEY="$(echo $aws_sts_credentials | jq -r '.SecretAccessKey')" >> $BASH_ENV
#           echo export AWS_SESSION_TOKEN="$(echo $aws_sts_credentials | jq -r '.SessionToken')" >> $BASH_ENV
#           source $BASH_ENV
workflows:
  build-and-deploy-to-prod:
    jobs:
      # - tmp:
      #     context: aws-deploy
      # - wait_for_approval:
      #     type: approval
      #     filters:
      #       branches:
      #         only: master
      - aws-ecr/build-and-push-image:
          # requires:
          #   - wait_for_approval
          filters:
            branches:
              only: master
          # account-url: AWS_ECR_ACCOUNT_URL # 8.1.2では非対応
          # aws-access-key-id: AWS_ACCESS_KEY_ID
          # aws-secret-access-key: AWS_SECRET_ACCESS_KEY
          # region: "${AWS_REGION}"
          region: "${AWS_DEFAULT_REGION}"
          registry-id: AWS_ECR_REGISTRY_ID
          repo: "nginx"
          # tag: "${CIRCLE_SHA1}" # デフォルトはlatest
          tag: "latest"
          path: app
          dockerfile: docker/Dockerfile
          context: aws-deploy
          assume-web-identity: true
          role-arn: "${AWS_ROLE_ARN}"
          role-session-name: "circleci-oidc"
          session-duration: "900"
      # ## ECSへデプロイするジョブ
      # - aws-ecs/deploy-service-update:
      #     requires:
      #       - aws-ecr/build-and-push-image
      #     aws-access-key-id: AWS_ACCESS_KEY_ID
      #     aws-secret-access-key: AWS_SECRET_ACCESS_KEY
      #     aws-region: AWS_REGION
      #     family: "circleci-book-task"
      #     service-name: "circleci-book-service"
      #     cluster-name: "circleci-book-cluster"
      #     # container-image-name-updates: "container=circleci-book-container,image-and-tag=${AWS_ECR_ACCOUNT_URL}/nginx:${CIRCLE_SHA1}"
      #     # container-image-name-updates: "container=circleci-book-container,image-and-tag=${AWS_ECR_ACCOUNT_URL}/nginx:latest"
### E2Eテストの例
#version: 2
#jobs:
#  run_e2e_test:
#    docker:
#      - image: circleci/ruby:2.6.5
#    working_directory: ~/project
#    steps:
#      - checkout
#      - run: bundle install
#      - run: bundle exec ruby e2e.rb "https://google.com"
#
#workflows:
#  version: 2
#  monitoring:
#    triggers:
#      - schedule:
#          cron: "* * * * *"
#          filters:
#            branches:
#              only:
#                - master
#    jobs:
#      - run_e2e_test
